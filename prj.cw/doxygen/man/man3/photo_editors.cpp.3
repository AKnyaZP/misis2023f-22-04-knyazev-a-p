.TH "prj.cw/photo_editor/photo_editors.cpp" 3 "Photoeditor" \" -*- nroff -*-
.ad l
.nh
.SH NAME
prj.cw/photo_editor/photo_editors.cpp \- Файл \fBphoto_editors\&.cpp\fP, содержащий класс int \fBmain()\fP, в котором и реализовано приложение\&.  

.SH SYNOPSIS
.br
.PP
\fR#include <include/photoeditor/photo_editors\&.h>\fP
.br
\fR#include <include/image/image\&.h>\fP
.br
\fR#include <include/flags/flags\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBmain\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Файл \fBphoto_editors\&.cpp\fP, содержащий класс int \fBmain()\fP, в котором и реализовано приложение\&. 


.PP
Definition in file \fBphoto_editors\&.cpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "int main ()"
Инициализирует библиотеку GLFW и проверяет, была ли инициализация успешной
.PP
Устанавливает версию OpenGL для контекста окна
.PP
Устанавливает профиль OpenGL для контекста окна
.PP
Разрешает изменение размера окна
.PP
Создает новое окно с заданными параметрами
.PP
Проверяет, было ли создание окна успешным
.PP
Создает новый экземпляр редактора с созданным окном
.PP
Получает доступ к объекту ввода/вывода ImGui
.PP
Устанавливает флаги окна ImGui
.PP
Устанавливает масштаб шрифта ImGui
.PP
Создает новые экземпляры классов Flag и Image
.PP
Устанавливает фильтры файлов для диалоговых окон
.PP
Создает новую строку для хранения пути к файлу
.PP
Инициализирует флаги для управления параметрами и диалогами
.PP
Опрашивает системные события
.PP
Подготавливает ImGui для нового кадра OpenGL
.PP
Подготавливает ImGui для нового кадра GLFW
.PP
Подготавливает ImGui для нового кадра
.PP
Устанавливает следующую позицию окна ImGui
.PP
Устанавливает следующий размер окна ImGui
.PP
создаём окно ImGui
.PP
создаём меню-бар и кнопки для него
.PP
реализовываем горячие клавиши
.PP
создание диалогового окна для открытия изображения \&.jpg
.PP
реализовываем ползунки, для установки значений параметров изображений
.PP
реализовываем текстовые поля, для установки значений параметров изображений
.PP
Начинает новую область окна ImGui с заголовком 'Image'\&. Флаг ImGuiWindowFlags_NoCollapse гарантирует, что окно не может быть свернуто\&.
.PP
Выводит изображение на экран\&. Метод create_texture используется для создания текстуры изображения, а метод show_image_imgui - для отображения этой текстуры\&.
.PP
Устанавливает флаг if_image_is_open в true, указывая, что изображение открыто\&.
.PP
Заканчивает область окна, которую мы начали ранее\&.
.PP
Открывает всплывающее окно под названием 'Notification(exit)'\&.
.PP
Начинает модальное всплывающее окно под названием 'Notification(exit)'\&.
.PP
Закрываем модальное всплывающее окно под названием 'Notification(exit)'\&.
.PP
Проверяем, отображается ли диалоговое окно для выбора папки\&. Если да, то выполняются действия внутри этого блока кода\&.
.PP
Получаем полный путь к выбранному файлу\&.
.PP
Преобразуем локальное время в строку формата 'ГГГГ-ММ-ДД_чч-мм'\&.
.PP
Создаём имя файла, добавляя к дате и времени суффикс '_photo_editor_image\&.jpg'\&.
.PP
Сохраняем изображение в выбранную папку с созданным именем файла\&.
.PP
Закрываем диалоговое окно для выбора папки\&.
.PP
Проверяем, были ли операция успешной и не отображается ли диалоговое окно для выбора папки\&. Если оба условия выполняются, то открывается всплывающее окно с сообщением о успешном сохранении\&.
.PP
Проверяем, была ли операция успешной\&. Если да, то открывается модальное всплывающее окно с сообщением о успешном сохранении\&.
.PP
Заканчиваем область окна, которую мы начали ранее\&.
.PP
рендерим приложение
.PP
Завершаем работу с библиотеками ImGui\&.
.PP
Definition at line \fB9\fP of file \fBphoto_editors\&.cpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Photoeditor from the source code\&.
